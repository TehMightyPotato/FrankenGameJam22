//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/ControlScheme.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlScheme : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlScheme()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlScheme"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""f95ec14b-c404-4711-b99d-ff5786c6ee1a"",
            ""actions"": [
                {
                    ""name"": ""Fire1"",
                    ""type"": ""Button"",
                    ""id"": ""5aad1734-b025-4d87-91d0-105c32e67f44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire2"",
                    ""type"": ""Button"",
                    ""id"": ""f3b5509e-3c81-4c3a-842a-f6741f1ca3bc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire3"",
                    ""type"": ""Button"",
                    ""id"": ""c201b50e-92fd-41df-91a6-b428630df97a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRow1"",
                    ""type"": ""Button"",
                    ""id"": ""92aeda1d-fe8b-48b1-927d-4529dd472c0f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRow2"",
                    ""type"": ""Button"",
                    ""id"": ""4cd06875-9884-42d9-b1c7-61e3374bbd8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectRow3"",
                    ""type"": ""Button"",
                    ""id"": ""ee17df41-c2d0-47a1-bd61-33ec81e6d901"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4ab6a2fa-f414-416a-8f5a-2f9a8a180106"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""937b5bac-aebf-4f65-bedb-19b96cf25e0a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79a23a5e-09f3-45ef-9755-58bc82364012"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""137fbbf7-5683-4658-9c2b-e6e06571face"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd38a96f-1cb6-4f1b-ab9b-e8a5017394f5"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRow1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22c42254-9ac8-4973-a4c5-ab2b7883915b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRow2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ace839c-c93d-4e81-aeaa-0fed850aa772"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectRow3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12b8ea1f-d68d-4ffa-a30c-27aab73a2421"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Default"",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Default"",
            ""bindingGroup"": ""Default"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Fire1 = m_Gameplay.FindAction("Fire1", throwIfNotFound: true);
        m_Gameplay_Fire2 = m_Gameplay.FindAction("Fire2", throwIfNotFound: true);
        m_Gameplay_Fire3 = m_Gameplay.FindAction("Fire3", throwIfNotFound: true);
        m_Gameplay_SelectRow1 = m_Gameplay.FindAction("SelectRow1", throwIfNotFound: true);
        m_Gameplay_SelectRow2 = m_Gameplay.FindAction("SelectRow2", throwIfNotFound: true);
        m_Gameplay_SelectRow3 = m_Gameplay.FindAction("SelectRow3", throwIfNotFound: true);
        m_Gameplay_Mouse = m_Gameplay.FindAction("Mouse", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Fire1;
    private readonly InputAction m_Gameplay_Fire2;
    private readonly InputAction m_Gameplay_Fire3;
    private readonly InputAction m_Gameplay_SelectRow1;
    private readonly InputAction m_Gameplay_SelectRow2;
    private readonly InputAction m_Gameplay_SelectRow3;
    private readonly InputAction m_Gameplay_Mouse;
    public struct GameplayActions
    {
        private @ControlScheme m_Wrapper;
        public GameplayActions(@ControlScheme wrapper) { m_Wrapper = wrapper; }
        public InputAction @Fire1 => m_Wrapper.m_Gameplay_Fire1;
        public InputAction @Fire2 => m_Wrapper.m_Gameplay_Fire2;
        public InputAction @Fire3 => m_Wrapper.m_Gameplay_Fire3;
        public InputAction @SelectRow1 => m_Wrapper.m_Gameplay_SelectRow1;
        public InputAction @SelectRow2 => m_Wrapper.m_Gameplay_SelectRow2;
        public InputAction @SelectRow3 => m_Wrapper.m_Gameplay_SelectRow3;
        public InputAction @Mouse => m_Wrapper.m_Gameplay_Mouse;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Fire1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire1;
                @Fire1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire1;
                @Fire1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire1;
                @Fire2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire2;
                @Fire2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire2;
                @Fire2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire2;
                @Fire3.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire3;
                @Fire3.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire3;
                @Fire3.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnFire3;
                @SelectRow1.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow1;
                @SelectRow1.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow1;
                @SelectRow1.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow1;
                @SelectRow2.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow2;
                @SelectRow2.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow2;
                @SelectRow2.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow2;
                @SelectRow3.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow3;
                @SelectRow3.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow3;
                @SelectRow3.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnSelectRow3;
                @Mouse.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMouse;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Fire1.started += instance.OnFire1;
                @Fire1.performed += instance.OnFire1;
                @Fire1.canceled += instance.OnFire1;
                @Fire2.started += instance.OnFire2;
                @Fire2.performed += instance.OnFire2;
                @Fire2.canceled += instance.OnFire2;
                @Fire3.started += instance.OnFire3;
                @Fire3.performed += instance.OnFire3;
                @Fire3.canceled += instance.OnFire3;
                @SelectRow1.started += instance.OnSelectRow1;
                @SelectRow1.performed += instance.OnSelectRow1;
                @SelectRow1.canceled += instance.OnSelectRow1;
                @SelectRow2.started += instance.OnSelectRow2;
                @SelectRow2.performed += instance.OnSelectRow2;
                @SelectRow2.canceled += instance.OnSelectRow2;
                @SelectRow3.started += instance.OnSelectRow3;
                @SelectRow3.performed += instance.OnSelectRow3;
                @SelectRow3.canceled += instance.OnSelectRow3;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_DefaultSchemeIndex = -1;
    public InputControlScheme DefaultScheme
    {
        get
        {
            if (m_DefaultSchemeIndex == -1) m_DefaultSchemeIndex = asset.FindControlSchemeIndex("Default");
            return asset.controlSchemes[m_DefaultSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnFire1(InputAction.CallbackContext context);
        void OnFire2(InputAction.CallbackContext context);
        void OnFire3(InputAction.CallbackContext context);
        void OnSelectRow1(InputAction.CallbackContext context);
        void OnSelectRow2(InputAction.CallbackContext context);
        void OnSelectRow3(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
    }
}
